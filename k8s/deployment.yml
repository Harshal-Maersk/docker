apiVersion: apps/v1
kind: Deployment
metadata:
  name: application-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application-db
  template:
    metadata:
      labels:
        app: application-db
    spec:
      containers:
      - name: application-db
        image: postgres:12
        imagePullPolicy: Never
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "application"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application-demo
  template:
    metadata:
      labels:
        app: application-demo
    spec:
      containers:
      - name: application-demo
        image: docker-backend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "application-db"
        - name: DB_PORT
          value: "5432"
        - name: DB_USERNAME
          value: "postgres"
        - name: DB_PASSWORD
          value: "postgres"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
      - name: loki
        image: grafana/loki:latest
        ports:
        - containerPort: 3100
        volumeMounts:
        - name: loki-storage
          mountPath: /loki
      volumes:
      - name: loki-storage
        persistentVolumeClaim:
          claimName: loki-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
      - name: promtail
        image: grafana/promtail:latest
        volumeMounts:
        - name: promtail-config
          mountPath: /etc/promtail
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: promtail-config
        configMap:
          name: promtail-config
      - name: logs
        hostPath:
          path: /path/to/logs
